name: ci

on:
  push:
    branches:
      - main

env:
  APP_NAME: socialmediacollector
  DOCKERHUB_REPO: aturret/socialmediacollector
  APP_VERSION: latest

jobs:
  docker:
    runs-on: ubuntu-latest
    steps:
      -
        name: Checkout
        uses: actions/checkout@v2
      -
        name: Check commit message
        id: check_message
        run: |
          MESSAGE=$(git log --format=%B -n 1 ${{ github.sha }})
          if [[ "$MESSAGE" == *"[github-action]"* ]]; then
            echo "::set-output name=skip::true"
          else
            echo "::set-output name=skip::false"
          fi

      -
        name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      -
        name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      -
        name: Generate App Version
        run: echo APP_VERSION=`git describe --tags --always` >> $GITHUB_ENV
      -
        name: Build and push
        if: steps.check_message.outputs.skip == 'false'
        uses: docker/build-push-action@v2
        with:
          context: .
          platforms: |
            linux/amd64
#            linux/arm64
#            linux/386
#            linux/arm/v5
#            linux/arm/v7
#            linux/mips64le
#            linux/ppc64le
#            linux/s390x
          push: true
          build-args: |
            APP_NAME=${{ env.APP_NAME }}
            APP_VERSION=${{ env.APP_VERSION }}
          tags: |
            ${{ env.DOCKERHUB_REPO }}:latest
            ${{ env.DOCKERHUB_REPO }}:${{ env.APP_VERSION }}
#  deploy:
#    runs-on: ubuntu-latest
#    needs: docker
#    steps:
##      - name: Check commit message
##        id: check_message
##        run : |
##          MESSAGE=$(git log --format=%B -n 1 ${{ github.sha }})
##          if [[ "$MESSAGE" == *"[test]"* ]]; then
##            echo "::set-output name=skip::true"
##          else
##            echo "::set-output name=skip::false"
##          fi
#      - name: Checkout
##        if: steps.check_message.outputs.skip == 'false'
#        uses: appleboy/ssh-action@master
#        with:
#          host: ${{ secrets.VPS_HOST }}
#          port: ${{ secrets.VPS_PORT }}
#          username: ${{ secrets.VPS_USERNAME }}
#          password: ${{ secrets.VPS_PASSWORD }}
#          key: ${{ secrets.VPS_KEY }}
#          passphrase: ${{ secrets.VPS_PASSPHRASE }}
#          timeout: 300s
#          script: |
#            cd ~/vpsdockerconf/socialmediacollector
#            docker-compose down
#            docker rmi ${{ env.DOCKERHUB_REPO }} || true
#            docker-compose up -d
#            docker rm ${{ env.APP_NAME }} || true
#            docker pull ${{ env.DOCKERHUB_REPO }}:latest
#            docker stop ${{ env.APP_NAME }} || true


